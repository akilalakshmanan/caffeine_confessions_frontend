[{"/home/akila/Desktop/caffeine-confessions-frontend/src/index.js":"1","/home/akila/Desktop/caffeine-confessions-frontend/src/App.js":"2","/home/akila/Desktop/caffeine-confessions-frontend/src/reportWebVitals.js":"3","/home/akila/Desktop/caffeine-confessions-frontend/src/serviceWorkerRegistration.js":"4","/home/akila/Desktop/caffeine-confessions-frontend/src/Store.js":"5","/home/akila/Desktop/caffeine-confessions-frontend/src/utils.js":"6","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/ProductScreen.js":"7","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/HomeScreen.js":"8","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/CartScreen.js":"9","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/ProductEditScreen.js":"10","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/ProductCreateScreen.js":"11","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/ProductListScreen.js":"12","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/UserEditScreen.js":"13","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/SearchScreen.js":"14","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/ProfileScreen.js":"15","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/SignupScreen.js":"16","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/SigninScreen.js":"17","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/MenuScreen.js":"18","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/ShopScreen.js":"19","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/DashboardScreen.js":"20","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/UserListScreen.js":"21","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/AboutScreen.js":"22","/home/akila/Desktop/caffeine-confessions-frontend/src/components/AdminRoute.js":"23","/home/akila/Desktop/caffeine-confessions-frontend/src/components/SearchBox.js":"24","/home/akila/Desktop/caffeine-confessions-frontend/src/components/ProtectedRoute.js":"25","/home/akila/Desktop/caffeine-confessions-frontend/src/components/QualityInfo.js":"26","/home/akila/Desktop/caffeine-confessions-frontend/src/components/ControlledCarousel.js":"27","/home/akila/Desktop/caffeine-confessions-frontend/src/components/LoadingBox.js":"28","/home/akila/Desktop/caffeine-confessions-frontend/src/components/MessageBox.js":"29","/home/akila/Desktop/caffeine-confessions-frontend/src/components/Product.js":"30","/home/akila/Desktop/caffeine-confessions-frontend/src/components/MenuItem.js":"31","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/OrderListScreen.js":"32","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/OrderHistoryScreen.js":"33"},{"size":1086,"mtime":1651722991832,"results":"34","hashOfConfig":"35"},{"size":10989,"mtime":1652418937291,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1650958811717,"results":"37","hashOfConfig":"35"},{"size":5519,"mtime":1651722992268,"results":"38","hashOfConfig":"35"},{"size":2931,"mtime":1652064945695,"results":"39","hashOfConfig":"35"},{"size":150,"mtime":1651138100341,"results":"40","hashOfConfig":"35"},{"size":5154,"mtime":1652344568177,"results":"41","hashOfConfig":"35"},{"size":2429,"mtime":1652344568161,"results":"42","hashOfConfig":"35"},{"size":5921,"mtime":1652374171376,"results":"43","hashOfConfig":"35"},{"size":9547,"mtime":1652344568161,"results":"44","hashOfConfig":"35"},{"size":9584,"mtime":1652344568161,"results":"45","hashOfConfig":"35"},{"size":6560,"mtime":1652344568161,"results":"46","hashOfConfig":"35"},{"size":4302,"mtime":1652344568181,"results":"47","hashOfConfig":"35"},{"size":9103,"mtime":1652344568177,"results":"48","hashOfConfig":"35"},{"size":3256,"mtime":1652344568177,"results":"49","hashOfConfig":"35"},{"size":3223,"mtime":1652344568181,"results":"50","hashOfConfig":"35"},{"size":2503,"mtime":1652344568177,"results":"51","hashOfConfig":"35"},{"size":3349,"mtime":1652344568161,"results":"52","hashOfConfig":"35"},{"size":2561,"mtime":1652344568177,"results":"53","hashOfConfig":"35"},{"size":4411,"mtime":1652344568161,"results":"54","hashOfConfig":"35"},{"size":4242,"mtime":1652344568181,"results":"55","hashOfConfig":"35"},{"size":438,"mtime":1652344568161,"results":"56","hashOfConfig":"35"},{"size":323,"mtime":1651138099361,"results":"57","hashOfConfig":"35"},{"size":1073,"mtime":1651138099649,"results":"58","hashOfConfig":"35"},{"size":307,"mtime":1651138099593,"results":"59","hashOfConfig":"35"},{"size":2013,"mtime":1652209633868,"results":"60","hashOfConfig":"35"},{"size":2334,"mtime":1652376333768,"results":"61","hashOfConfig":"35"},{"size":253,"mtime":1652344568161,"results":"62","hashOfConfig":"35"},{"size":195,"mtime":1652344568161,"results":"63","hashOfConfig":"35"},{"size":1598,"mtime":1652209633868,"results":"64","hashOfConfig":"35"},{"size":918,"mtime":1652374171372,"results":"65","hashOfConfig":"35"},{"size":3171,"mtime":1652417401759,"results":"66","hashOfConfig":"35"},{"size":2452,"mtime":1652417426163,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"8s6bqr",{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"71"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"71"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"71"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"71"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"71"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"71"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"71"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"71"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/akila/Desktop/caffeine-confessions-frontend/src/index.js",[],[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/App.js",["176","177","178","179","180","181","182","183","184"],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/reportWebVitals.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/serviceWorkerRegistration.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/Store.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/utils.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/ProductScreen.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/HomeScreen.js",["185","186","187","188","189","190","191","192","193"],[],"import axios from 'axios';\nimport { useEffect, useReducer } from 'react';\nimport logger from 'use-reducer-logger';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Product from '../components/Product';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport QualityInfo from '../components/QualityInfo';\nimport ControlledCarousel from '../components/ControlledCarousel';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, products: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nfunction HomeScreen() {\n  const [{ loading, error, products }, dispatch] = useReducer(logger(reducer), {\n    products: [],\n    loading: true,\n    error: '',\n  });\n  // const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const instance = axios.create({ baseURL: 'http://localhost:5000' });\n        const result = await instance.get('/api/products');\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: err.message });\n      }\n\n      // setProducts(result.data);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div style={{marginTop:\"120px\"}}>\n      <Helmet>\n        <title>Caffeine Coffesions</title>\n      </Helmet>\n      <div\n        className=\"home-screen-bg\"\n      >\n        {/* <h1>Featured Products</h1>\n        <div className=\"products\">\n          {loading ? (\n            <LoadingBox />\n          ) : error ? (\n            <MessageBox variant=\"danger\">{error}</MessageBox>\n          ) : (\n            <Row>\n              {products.map((product) => (\n                <Col key={product.slug} sm={6} md={4} lg={3} className=\"mb-3\">\n                  <Product product={product}></Product>\n                </Col>\n              ))}\n            </Row>\n          )}\n        </div> */}\n        <QualityInfo />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <p>idsrusdksk</p>\n      </div>\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/CartScreen.js",["194","195"],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/ProductEditScreen.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/ProductCreateScreen.js",["196","197","198"],[],"import React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Button from 'react-bootstrap/Button';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'CREATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'CREATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'CREATE_FAIL':\n      return { ...state, loadingUpdate: false };\n    case 'UPLOAD_REQUEST':\n      return { ...state, loadingUpload: true, errorUpload: '' };\n    case 'UPLOAD_SUCCESS':\n      return {\n        ...state,\n        loadingUpload: false,\n        errorUpload: '',\n      };\n    case 'UPLOAD_FAIL':\n      return { ...state, loadingUpload: false, errorUpload: action.payload };\n\n    default:\n      return state;\n  }\n};\nexport default function ProductCreateScreen() {\n  const navigate = useNavigate();\n  // const params = useParams(); // /product/:id\n  // const { id: productId } = params;\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n  const [{ loading, error, loadingUpdate, loadingUpload }, dispatch] =\n    useReducer(reducer, {\n      loading: false,\n      error: '',\n    });\n\n  const [name, setName] = useState('');\n  const [slug, setSlug] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [images, setImages] = useState([]);\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [brand, setBrand] = useState('');\n  const [description, setDescription] = useState('');\n  const [isActive, setIsActive] = useState('');\n\n  // useEffect(() => {\n    // const fetchData = async () => {\n    //   try {\n    //     dispatch({ type: 'FETCH_REQUEST' });\n    //     const instance = axios.create({baseURL:\"http://localhost:5000\"});\n    //     const { data } = await instance.get(`/api/products/${productId}`);\n    //     setName(data.name);\n    //     setSlug(data.slug);\n    //     setPrice(data.price);\n    //     setImage(data.image);\n    //     setImages(data.images);\n    //     setCategory(data.category);\n    //     setCountInStock(data.countInStock);\n    //     setBrand(data.brand);\n    //     setDescription(data.description);\n    //     setIsActive(data.isActive);\n    //     dispatch({ type: 'FETCH_SUCCESS' });\n    //   } catch (err) {\n    //     dispatch({\n    //       type: 'FETCH_FAIL',\n    //       payload: getError(err),\n    //     });\n    //   }\n    // };\n    // fetchData();\n  // }, []);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      dispatch({ type: 'CREATE_REQUEST' });\n      const instance = axios.create({baseURL:\"http://localhost:5000\"});\n      const { data } = await instance.post(\n        `/api/products/`,\n        {\n          name,\n          slug,\n          price,\n          image,\n          images,\n          category,\n          brand,\n          countInStock,\n          description,\n          isActive\n        },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n\n      dispatch({\n        type: 'CREATE_SUCCESS',\n      });\n      toast.success('Product updated successfully');\n      navigate('/admin/products');\n    } catch (err) {\n      toast.error(getError(err));\n      dispatch({ type: 'CREATE_FAIL' });\n    }\n  };\n  const uploadFileHandler = async (e, forImages) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('file', file);\n    try {\n      dispatch({ type: 'UPLOAD_REQUEST' });\n      const instance = axios.create({baseURL:\"http://localhost:5000\"});\n      const { data } = await instance.post('/api/upload', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n      dispatch({ type: 'UPLOAD_SUCCESS' });\n\n      if (forImages) {\n        setImages([...images, data.secure_url]);\n      } else {\n        setImage(data.secure_url);\n      }\n      toast.success('Image uploaded successfully. click Update to apply it');\n    } catch (err) {\n      toast.error(getError(err));\n      dispatch({ type: 'UPLOAD_FAIL', payload: getError(err) });\n    }\n  };\n  const deleteFileHandler = async (fileName, f) => {\n    console.log(fileName, f);\n    console.log(images);\n    console.log(images.filter((x) => x !== fileName));\n    setImages(images.filter((x) => x !== fileName));\n    toast.success('Image removed successfully. click Update to apply it');\n  };\n  return (\n    <Container className=\"small-container\" style={{marginTop:\"120px\"}}>\n      <Helmet>\n        <title>Create Product</title>\n      </Helmet>\n      <h1>Create Product</h1>\n\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <Form onSubmit={submitHandler}>\n          <Form.Group className=\"mb-3\" controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"slug\">\n            <Form.Label>Slug</Form.Label>\n            <Form.Control\n              value={slug}\n              onChange={(e) => setSlug(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"name\">\n            <Form.Label>Price</Form.Label>\n            <Form.Control\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"image\">\n            <Form.Label>Image File</Form.Label>\n            <Form.Control\n              value={image}\n              onChange={(e) => setImage(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"imageFile\">\n            <Form.Label>Upload Image</Form.Label>\n            <Form.Control type=\"file\" onChange={uploadFileHandler} />\n            {loadingUpload && <LoadingBox></LoadingBox>}\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"additionalImage\">\n            <Form.Label>Additional Images</Form.Label>\n            {images.length === 0 && <MessageBox>No image</MessageBox>}\n            <ListGroup variant=\"flush\">\n              {images.map((x) => (\n                <ListGroup.Item key={x}>\n                  {x}\n                  <Button variant=\"light\" onClick={() => deleteFileHandler(x)}>\n                    <i className=\"fa fa-times-circle\"></i>\n                  </Button>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"additionalImageFile\">\n            <Form.Label>Upload Aditional Image</Form.Label>\n            <Form.Control\n              type=\"file\"\n              onChange={(e) => uploadFileHandler(e, true)}\n            />\n            {loadingUpload && <LoadingBox></LoadingBox>}\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"category\">\n            <Form.Label>Category</Form.Label>\n            <Form.Control\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"brand\">\n            <Form.Label>Brand</Form.Label>\n            <Form.Control\n              value={brand}\n              onChange={(e) => setBrand(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"countInStock\">\n            <Form.Label>Count In Stock</Form.Label>\n            <Form.Control\n              value={countInStock}\n              onChange={(e) => setCountInStock(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"description\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"isActive\">\n            <Form.Label>Active Status</Form.Label>\n            <Form.Control\n              value={isActive}\n              onChange={(e) => setIsActive(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <div className=\"mb-3\">\n            <Button disabled={loadingUpdate} type=\"submit\">\n              Update\n            </Button>\n            {loadingUpdate && <LoadingBox></LoadingBox>}\n          </div>\n        </Form>\n      )}\n    </Container>\n  );\n}\n","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/ProductListScreen.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/UserEditScreen.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/SearchScreen.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/ProfileScreen.js",["199","200"],[],"import React, { useContext, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProfileScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false,\n  });\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const instance = axios.create({baseURL:\"http://localhost:5000\"});\n      const { data } = await instance.put(\n        '/api/users/profile',\n        {\n          name,\n          email,\n          password,\n        },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: 'UPDATE_SUCCESS',\n      });\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      toast.success('User updated successfully');\n    } catch (err) {\n      dispatch({\n        type: 'FETCH_FAIL',\n      });\n      toast.error(getError(err));\n    }\n  };\n\n  return (\n    <div className=\"container small-container\" style={{marginTop:\"120px\"}}>\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n      <h1 className=\"my-3\">User Profile</h1>\n      <form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Update</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/SignupScreen.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/SigninScreen.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/MenuScreen.js",["201","202","203"],[],"import { Row } from \"react-bootstrap\";\nimport MenuItem from \"../components/MenuItem\";\nimport Col from 'react-bootstrap/Col';\nimport { useEffect, useReducer, useState } from 'react';\nimport logger from 'use-reducer-logger';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n      case 'FETCH_REQUEST':\n        return { ...state, loading: true };\n      case 'FETCH_SUCCESS':\n        return { ...state, products: action.payload, loading: false };\n      case 'FETCH_FAIL':\n        return { ...state, loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n\nfunction MenuScreen(){\n    const [{ loading, error, products }, dispatch] = useReducer(logger(reducer), {\n        products: [],\n        loading: true,\n        error: '',\n      });\n\n    const [categories,setCategories]=useState([]);\n    const [catProds,setCatProds] = useState(null);\n\n      useEffect(() => {\n        const fetchData = async () => {\n          dispatch({ type: 'FETCH_REQUEST' });\n          try {\n            const instance = axios.create({ baseURL: 'http://localhost:5000' });\n            const result = await instance.get('/api/products');\n            const categoriesSet = new Set();\n            for(let i=0;i<result.data.length;i++){\n              categoriesSet.add(result.data[i].category)\n            }\n            let sample = Array.from(categoriesSet);\n            setCategories(sample);\n            dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n          } catch (err) {\n            dispatch({ type: 'FETCH_FAIL', payload: err.message });\n          }\n        };\n        fetchData();\n      }, []);\n    return (\n        <div className=\"menu-div\" style={{\n          marginTop:\"120px\",\n          marginLeft: \"30px\",\n          marginRight: \"30px\",\n          marginBottom: \"30px\",\n          backgroundImage:\n          'url(' +\n          '/images/bg_4.jpg' +\n          ')',\n          height: '100%',\n          width: '100%'\n        }}>\n            {loading ? (\n            <LoadingBox />\n          ) : error ? (\n            <MessageBox variant=\"danger\">{error}</MessageBox>\n          ) : (\n            <div>\n                {/* {categories}\n              {products.map((product) =>{\n                if(product.category==='coffee')\n                  return <Col key={product.slug} sm={6} md={4} lg={3} className=\"mb-3\">\n                    <MenuItem product={product}></MenuItem>\n                  </Col>\n                  })\n              } */}\n              { categories.map((categorie) => (\n                <div>\n                  <h3 style={{\n                    marginLeft: \"10px\"}}>{categorie}</h3>\n                  <Row style={{\n                    marginLeft: \"10px\",\n                    marginTop: \"10px\"}}>\n                      {products.map((product) =>{\n                      if(product.category===categorie)\n                      return <Col key={product.slug} sm={6} md={4} lg={3} className=\"mb-3\">\n                        <MenuItem product={product}></MenuItem>\n                      </Col>\n                      })}\n                  </Row>\n                </div>))\n              }\n            </div>\n          )\n        }\n        </div>\n    )\n}\n\nexport default MenuScreen;","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/ShopScreen.js",["204","205"],[],"import axios from 'axios';\nimport { useEffect, useReducer } from 'react';\nimport logger from 'use-reducer-logger';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Product from '../components/Product';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport QualityInfo from '../components/QualityInfo';\nimport ControlledCarousel from '../components/ControlledCarousel';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, products: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nfunction ShopScreen() {\n  const [{ loading, error, products }, dispatch] = useReducer(logger(reducer), {\n    products: [],\n    loading: true,\n    error: '',\n  });\n  // const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const instance = axios.create({ baseURL: 'http://localhost:5000' });\n        const result = await instance.get('/api/products');\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: err.message });\n      }\n\n      // setProducts(result.data);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div style={{marginTop:\"60px\",\n          marginLeft: \"30px\",\n          marginRight: \"30px\",\n          marginBottom: \"30px\",}}>\n      <Helmet>\n        <title>Happy Caffeine</title>\n      </Helmet>\n      <div\n        className=\"home-screen-bg\"\n        style={{\n          backgroundImage:\n            'url(' +\n            '/images/bg_4.jpg' +\n            ')',\n          height: '100%',\n          width: '100%',\n        }}\n      >\n        <h1>Featured Products</h1>\n        <div className=\"products\">\n          {loading ? (\n            <LoadingBox />\n          ) : error ? (\n            <MessageBox variant=\"danger\">{error}</MessageBox>\n          ) : (\n            <Row>\n              {products.map((product) => (\n                <Col key={product.slug} sm={6} md={4} lg={3} className=\"mb-3\">\n                  <Product product={product}></Product>\n                </Col>\n              ))}\n            </Row>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ShopScreen;\n","/home/akila/Desktop/caffeine-confessions-frontend/src/screens/DashboardScreen.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/UserListScreen.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/AboutScreen.js",["206"],[],"import QualityInfo from '../components/QualityInfo';\n\nfunction AboutScreen() {\n  return (\n    <div style={{marginTop:\"120px\"}}>\n      {/* <QualityInfo /> */}\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      about screen brooo\n    </div>\n  );\n}\n\nexport default AboutScreen;\n","/home/akila/Desktop/caffeine-confessions-frontend/src/components/AdminRoute.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/components/SearchBox.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/components/ProtectedRoute.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/components/QualityInfo.js",["207","208"],[],"import { Card } from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container';\n\nfunction QualityInfo() {\n  return (\n    <section class=\"ftco-section ftco-services\" style={{backgroundColor: \"#c49b63\"}}>\n    \t<div class=\"container\">\n    \t\t<div class=\"row\">\n          <div class=\"col-md-4 ftco-animate\">\n            <div class=\"media d-block text-center block-6 services\">\n              <div class=\"icon d-flex justify-content-center align-items-center mb-5\">\n              \t<span class=\"flaticon-choices\"></span>\n              </div>\n              <div class=\"media-body\">\n                <h3 class=\"heading\">Easy to Order</h3>\n                <p>Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic.</p>\n              </div>\n            </div>      \n          </div>\n          <div class=\"col-md-4 ftco-animate\">\n            <div class=\"media d-block text-center block-6 services\">\n              <div class=\"icon d-flex justify-content-center align-items-center mb-5\">\n              \t<span class=\"flaticon-delivery-truck\"></span>\n              </div>\n              <div class=\"media-body\">\n                <h3 class=\"heading\">Fastest Delivery</h3>\n                <p>Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic.</p>\n              </div>\n            </div>      \n          </div>\n          <div class=\"col-md-4 ftco-animate\">\n            <div class=\"media d-block text-center block-6 services\">\n              <div class=\"icon d-flex justify-content-center align-items-center mb-5\">\n              \t<span class=\"flaticon-coffee-bean\"></span></div>\n              <div class=\"media-body\">\n                <h3 class=\"heading\">Quality Coffee</h3>\n                <p>Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic.</p>\n              </div>\n            </div>    \n          </div>\n        </div>\n    \t</div>\n    </section>\n  );\n}\nexport default QualityInfo;\n","/home/akila/Desktop/caffeine-confessions-frontend/src/components/ControlledCarousel.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/components/LoadingBox.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/components/MessageBox.js",[],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/components/Product.js",["209"],[],"import Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { Store } from '../Store';\n\nfunction Product(props) {\n  const { product } = props;\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const {\n    cart: { cartItems },\n  } = state;\n\n  const addToCartHandler = async (item) => {\n    const existItem = cartItems.find((x) => x._id === product._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const instance = axios.create({ baseURL: 'http://localhost:5000' });\n    const { data } = await instance.get(`/api/products/${item._id}`);\n    if (data.countInStock < quantity) {\n      window.alert('Sorry. Product is out of stock');\n      return;\n    }\n    ctxDispatch({\n      type: 'CART_ADD_ITEM',\n      payload: { ...item, quantity },\n    });\n  };\n\n  return (\n    <Card style={{backgroundColor:\"transparent\"}}>\n      <img src={product.image} className=\"card-img-top\" alt={product.name} />\n      <Card.Body>\n        <Card.Title style={{color:\"white\"}}>{product.name}</Card.Title>\n        <Card.Text style={{color:\"white\"}}>${product.price}</Card.Text>\n        <Card.Text style={{color:\"white\"}}>{product.description}</Card.Text>\n        {product.countInStock === 0 ? (\n          <Button variant=\"light\" disabled>\n            Out of stock\n          </Button>\n        ) : (\n          <Button onClick={() => addToCartHandler(product)}>Add to cart</Button>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\nexport default Product;\n","/home/akila/Desktop/caffeine-confessions-frontend/src/components/MenuItem.js",["210","211","212"],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/OrderListScreen.js",["213","214","215"],[],"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/OrderHistoryScreen.js",["216","217"],[],{"ruleId":"218","severity":1,"message":"219","line":14,"column":17,"nodeType":"220","messageId":"221","endLine":14,"endColumn":31},{"ruleId":"218","severity":1,"message":"222","line":17,"column":8,"nodeType":"220","messageId":"221","endLine":17,"endColumn":17},{"ruleId":"218","severity":1,"message":"223","line":31,"column":8,"nodeType":"220","messageId":"221","endLine":31,"endColumn":19},{"ruleId":"218","severity":1,"message":"224","line":34,"column":10,"nodeType":"220","messageId":"221","endLine":34,"endColumn":14},{"ruleId":"218","severity":1,"message":"225","line":52,"column":10,"nodeType":"220","messageId":"221","endLine":52,"endColumn":20},{"ruleId":"226","severity":1,"message":"227","line":91,"column":6,"nodeType":"228","endLine":91,"endColumn":8,"suggestions":"229"},{"ruleId":"230","severity":1,"message":"231","line":197,"column":37,"nodeType":"232","messageId":"233","endLine":197,"endColumn":38},{"ruleId":"230","severity":1,"message":"231","line":197,"column":58,"nodeType":"232","messageId":"233","endLine":197,"endColumn":59},{"ruleId":"218","severity":1,"message":"234","line":297,"column":10,"nodeType":"220","messageId":"221","endLine":297,"endColumn":16},{"ruleId":"218","severity":1,"message":"235","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":11},{"ruleId":"218","severity":1,"message":"236","line":5,"column":8,"nodeType":"220","messageId":"221","endLine":5,"endColumn":11},{"ruleId":"218","severity":1,"message":"237","line":6,"column":8,"nodeType":"220","messageId":"221","endLine":6,"endColumn":15},{"ruleId":"218","severity":1,"message":"238","line":8,"column":8,"nodeType":"220","messageId":"221","endLine":8,"endColumn":18},{"ruleId":"218","severity":1,"message":"239","line":9,"column":8,"nodeType":"220","messageId":"221","endLine":9,"endColumn":18},{"ruleId":"218","severity":1,"message":"240","line":11,"column":8,"nodeType":"220","messageId":"221","endLine":11,"endColumn":26},{"ruleId":"218","severity":1,"message":"241","line":27,"column":12,"nodeType":"220","messageId":"221","endLine":27,"endColumn":19},{"ruleId":"218","severity":1,"message":"242","line":27,"column":21,"nodeType":"220","messageId":"221","endLine":27,"endColumn":26},{"ruleId":"218","severity":1,"message":"243","line":27,"column":28,"nodeType":"220","messageId":"221","endLine":27,"endColumn":36},{"ruleId":"218","severity":1,"message":"244","line":15,"column":9,"nodeType":"220","messageId":"221","endLine":15,"endColumn":17},{"ruleId":"218","severity":1,"message":"245","line":50,"column":9,"nodeType":"220","messageId":"221","endLine":50,"endColumn":24},{"ruleId":"218","severity":1,"message":"246","line":1,"column":29,"nodeType":"220","messageId":"221","endLine":1,"endColumn":38},{"ruleId":"218","severity":1,"message":"247","line":2,"column":23,"nodeType":"220","messageId":"221","endLine":2,"endColumn":32},{"ruleId":"218","severity":1,"message":"248","line":100,"column":15,"nodeType":"220","messageId":"221","endLine":100,"endColumn":19},{"ruleId":"218","severity":1,"message":"249","line":30,"column":10,"nodeType":"220","messageId":"221","endLine":30,"endColumn":25},{"ruleId":"218","severity":1,"message":"250","line":32,"column":12,"nodeType":"220","messageId":"221","endLine":32,"endColumn":25},{"ruleId":"218","severity":1,"message":"251","line":31,"column":12,"nodeType":"220","messageId":"221","endLine":31,"endColumn":20},{"ruleId":"218","severity":1,"message":"252","line":31,"column":21,"nodeType":"220","messageId":"221","endLine":31,"endColumn":32},{"ruleId":"253","severity":1,"message":"254","line":86,"column":47,"nodeType":"255","messageId":"256","endLine":86,"endColumn":49},{"ruleId":"218","severity":1,"message":"223","line":10,"column":8,"nodeType":"220","messageId":"221","endLine":10,"endColumn":19},{"ruleId":"218","severity":1,"message":"240","line":11,"column":8,"nodeType":"220","messageId":"221","endLine":11,"endColumn":26},{"ruleId":"218","severity":1,"message":"223","line":1,"column":8,"nodeType":"220","messageId":"221","endLine":1,"endColumn":19},{"ruleId":"218","severity":1,"message":"224","line":1,"column":10,"nodeType":"220","messageId":"221","endLine":1,"endColumn":14},{"ruleId":"218","severity":1,"message":"257","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":17},{"ruleId":"218","severity":1,"message":"258","line":3,"column":10,"nodeType":"220","messageId":"221","endLine":3,"endColumn":14},{"ruleId":"218","severity":1,"message":"224","line":1,"column":10,"nodeType":"220","messageId":"221","endLine":1,"endColumn":14},{"ruleId":"218","severity":1,"message":"259","line":7,"column":30,"nodeType":"220","messageId":"221","endLine":7,"endColumn":41},{"ruleId":"218","severity":1,"message":"260","line":9,"column":17,"nodeType":"220","messageId":"221","endLine":9,"endColumn":26},{"ruleId":"218","severity":1,"message":"261","line":3,"column":10,"nodeType":"220","messageId":"221","endLine":3,"endColumn":15},{"ruleId":"218","severity":1,"message":"262","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":14},{"ruleId":"218","severity":1,"message":"244","line":41,"column":9,"nodeType":"220","messageId":"221","endLine":41,"endColumn":17},{"ruleId":"218","severity":1,"message":"262","line":9,"column":8,"nodeType":"220","messageId":"221","endLine":9,"endColumn":14},{"ruleId":"218","severity":1,"message":"244","line":27,"column":9,"nodeType":"220","messageId":"221","endLine":27,"endColumn":17},"no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'SearchBox' is defined but never used.","'QualityInfo' is defined but never used.","'Card' is defined but never used.","'categories' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ctxDispatch' and 'userInfo.token'. Either include them or remove the dependency array.","ArrayExpression",["263"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Header' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Product' is defined but never used.","'LoadingBox' is defined but never used.","'MessageBox' is defined but never used.","'ControlledCarousel' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'products' is assigned a value but never used.","'navigate' is assigned a value but never used.","'checkoutHandler' is assigned a value but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'data' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","'catProds' is assigned a value but never used.","'setCatProds' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Container' is defined but never used.","'Link' is defined but never used.","'ctxDispatch' is assigned a value but never used.","'cartItems' is assigned a value but never used.","'toast' is defined but never used.","'Button' is defined but never used.",{"desc":"264","fix":"265"},"Update the dependencies array to be: [ctxDispatch, userInfo.token]",{"range":"266","text":"267"},[3687,3689],"[ctxDispatch, userInfo.token]"]
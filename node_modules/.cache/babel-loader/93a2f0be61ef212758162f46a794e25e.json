{"ast":null,"code":"var _jsxFileName = \"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/OrderListScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        orders: action.payload,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case 'DELETE_REQUEST':\n      return { ...state,\n        loadingDelete: true,\n        successDelete: false\n      };\n\n    case 'DELETE_SUCCESS':\n      return { ...state,\n        loadingDelete: false,\n        successDelete: true\n      };\n\n    case 'DELETE_FAIL':\n      return { ...state,\n        loadingDelete: false\n      };\n\n    case 'DELETE_RESET':\n      return { ...state,\n        loadingDelete: false,\n        successDelete: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function OrderListScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const [{\n    loading,\n    error,\n    orders,\n    loadingDelete,\n    successDelete\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const instance = axios.create({\n          baseURL: 'http://172.17.0.2:5000'\n        });\n        const {\n          data\n        } = await instance.get(`/api/orders`, {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: data\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err)\n        });\n      }\n    };\n\n    if (successDelete) {\n      dispatch({\n        type: 'DELETE_RESET'\n      });\n    } else {\n      fetchData();\n    }\n  }, [userInfo, successDelete]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), loadingDelete && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"USER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TOTAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PAID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.user ? order.user.name : 'DELETED USER'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.createdAt.substring(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.totalPrice.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: 'Yes'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderListScreen, \"+vU6FAFqHd/ninSufbsk/pofmO4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = OrderListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderListScreen\");","map":{"version":3,"sources":["/home/akila/Desktop/caffeine-confessions-frontend/src/screens/OrderListScreen.js"],"names":["axios","React","useContext","useEffect","useReducer","toast","Button","Helmet","useNavigate","LoadingBox","MessageBox","Store","getError","reducer","state","action","type","loading","orders","payload","error","loadingDelete","successDelete","OrderListScreen","navigate","userInfo","dispatch","fetchData","instance","create","baseURL","data","get","headers","Authorization","token","err","map","order","_id","user","name","createdAt","substring","totalPrice","toFixed"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        orders: action.payload,\n        loading: false,\n      };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'DELETE_REQUEST':\n      return { ...state, loadingDelete: true, successDelete: false };\n    case 'DELETE_SUCCESS':\n      return {\n        ...state,\n        loadingDelete: false,\n        successDelete: true,\n      };\n    case 'DELETE_FAIL':\n      return { ...state, loadingDelete: false };\n    case 'DELETE_RESET':\n      return { ...state, loadingDelete: false, successDelete: false };\n    default:\n      return state;\n  }\n};\nexport default function OrderListScreen() {\n  const navigate = useNavigate();\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n  const [{ loading, error, orders, loadingDelete, successDelete }, dispatch] =\n    useReducer(reducer, {\n      loading: true,\n      error: '',\n    });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        dispatch({ type: 'FETCH_REQUEST' });\n        const instance = axios.create({ baseURL: 'http://172.17.0.2:5000' });\n        const { data } = await instance.get(`/api/orders`, {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err),\n        });\n      }\n    };\n    if (successDelete) {\n      dispatch({ type: 'DELETE_RESET' });\n    } else {\n      fetchData();\n    }\n  }, [userInfo, successDelete]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Orders</title>\n      </Helmet>\n      <h1>Orders</h1>\n      {loadingDelete && <LoadingBox></LoadingBox>}\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user ? order.user.name : 'DELETED USER'}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>{order.totalPrice.toFixed(2)}</td>\n                <td>{'Yes'}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
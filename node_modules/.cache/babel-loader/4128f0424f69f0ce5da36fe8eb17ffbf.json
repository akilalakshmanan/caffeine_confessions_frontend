{"ast":null,"code":"var _jsxFileName = \"/home/akila/Desktop/caffeine-confessions-frontend/src/components/Product.js\",\n    _s = $RefreshSig$();\n\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { Store } from '../Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Product(props) {\n  _s();\n\n  const {\n    product\n  } = props;\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    cart: {\n      cartItems\n    }\n  } = state;\n\n  const addToCartHandler = async item => {\n    const existItem = cartItems.find(x => x._id === product._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const instance = axios.create({\n      baseURL: 'http://172.17.0.2:5000'\n    });\n    const {\n      data\n    } = await instance.get(`/api/products/${item._id}`);\n\n    if (data.countInStock < quantity) {\n      window.alert('Sorry. Product is out of stock');\n      return;\n    }\n\n    ctxDispatch({\n      type: 'CART_ADD_ITEM',\n      payload: { ...item,\n        quantity\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      backgroundColor: 'transparent'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: product.image,\n      className: \"card-img-top\",\n      alt: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        style: {\n          color: 'white'\n        },\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        style: {\n          color: 'white'\n        },\n        children: [\"$\", product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        style: {\n          color: 'white'\n        },\n        children: product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), product.countInStock === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"light\",\n        disabled: true,\n        children: \"Out of stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => addToCartHandler(product),\n        children: \"Add to cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Product, \"XDbruNh/h18/KyvLzI/kuU/R8wE=\");\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/home/akila/Desktop/caffeine-confessions-frontend/src/components/Product.js"],"names":["Card","Button","Link","axios","useContext","Store","Product","props","product","state","dispatch","ctxDispatch","cart","cartItems","addToCartHandler","item","existItem","find","x","_id","quantity","instance","create","baseURL","data","get","countInStock","window","alert","type","payload","backgroundColor","image","name","color","price","description"],"mappings":"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","sourcesContent":["import Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { Store } from '../Store';\n\nfunction Product(props) {\n  const { product } = props;\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const {\n    cart: { cartItems },\n  } = state;\n\n  const addToCartHandler = async (item) => {\n    const existItem = cartItems.find((x) => x._id === product._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const instance = axios.create({ baseURL: 'http://172.17.0.2:5000' });\n    const { data } = await instance.get(`/api/products/${item._id}`);\n    if (data.countInStock < quantity) {\n      window.alert('Sorry. Product is out of stock');\n      return;\n    }\n    ctxDispatch({\n      type: 'CART_ADD_ITEM',\n      payload: { ...item, quantity },\n    });\n  };\n\n  return (\n    <Card style={{ backgroundColor: 'transparent' }}>\n      <img src={product.image} className=\"card-img-top\" alt={product.name} />\n      <Card.Body>\n        <Card.Title style={{ color: 'white' }}>{product.name}</Card.Title>\n        <Card.Text style={{ color: 'white' }}>${product.price}</Card.Text>\n        <Card.Text style={{ color: 'white' }}>{product.description}</Card.Text>\n        {product.countInStock === 0 ? (\n          <Button variant=\"light\" disabled>\n            Out of stock\n          </Button>\n        ) : (\n          <Button onClick={() => addToCartHandler(product)}>Add to cart</Button>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}
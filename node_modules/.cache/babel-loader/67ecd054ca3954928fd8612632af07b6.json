{"ast":null,"code":"var _jsxFileName = \"/home/akila/Desktop/caffeine-confessions-frontend/src/screens/MenuScreen.js\",\n    _s = $RefreshSig$();\n\nimport { Row } from \"react-bootstrap\";\nimport MenuItem from \"../components/MenuItem\";\nimport Col from 'react-bootstrap/Col';\nimport { useEffect, useReducer } from 'react';\nimport logger from 'use-reducer-logger';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        products: action.payload,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction MenuScreen() {\n  _s();\n\n  const [{\n    loading,\n    error,\n    products\n  }, dispatch] = useReducer(logger(reducer), {\n    products: [],\n    loading: true,\n    error: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: 'FETCH_REQUEST'\n      });\n\n      try {\n        const instance = axios.create({\n          baseURL: 'http://localhost:5000'\n        });\n        const result = await instance.get('/api/products');\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: result.data\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: err.message\n        });\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"106px\",\n      backgroundImage: 'url(' + '/images/bg_4.jpg' + ')',\n      height: '100%',\n      width: '100%'\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        md: 4,\n        lg: 3,\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(MenuItem, {\n          product: product\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this)\n      }, product.slug, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MenuScreen, \"dayz0z0bQAgrChGdcYosivNCsp4=\");\n\n_c = MenuScreen;\nexport default MenuScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuScreen\");","map":{"version":3,"sources":["/home/akila/Desktop/caffeine-confessions-frontend/src/screens/MenuScreen.js"],"names":["Row","MenuItem","Col","useEffect","useReducer","logger","LoadingBox","MessageBox","axios","reducer","state","action","type","loading","products","payload","error","MenuScreen","dispatch","fetchData","instance","create","baseURL","result","get","data","err","message","marginTop","backgroundImage","height","width","map","product","slug"],"mappings":"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","sourcesContent":["import { Row } from \"react-bootstrap\";\nimport MenuItem from \"../components/MenuItem\";\nimport Col from 'react-bootstrap/Col';\nimport { useEffect, useReducer } from 'react';\nimport logger from 'use-reducer-logger';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n      case 'FETCH_REQUEST':\n        return { ...state, loading: true };\n      case 'FETCH_SUCCESS':\n        return { ...state, products: action.payload, loading: false };\n      case 'FETCH_FAIL':\n        return { ...state, loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n\nfunction MenuScreen(){\n    const [{ loading, error, products }, dispatch] = useReducer(logger(reducer), {\n        products: [],\n        loading: true,\n        error: '',\n      });\n\n      useEffect(() => {\n        const fetchData = async () => {\n          dispatch({ type: 'FETCH_REQUEST' });\n          try {\n            const instance = axios.create({ baseURL: 'http://localhost:5000' });\n            const result = await instance.get('/api/products');\n            dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n          } catch (err) {\n            dispatch({ type: 'FETCH_FAIL', payload: err.message });\n          }\n        };\n        fetchData();\n      }, []);\n    return (\n        <div style={{marginTop:\"106px\",\n          backgroundImage:\n          'url(' +\n          '/images/bg_4.jpg' +\n          ')',\n          height: '100%',\n          width: '100%'\n        }}>\n            {loading ? (\n            <LoadingBox />\n          ) : error ? (\n            <MessageBox variant=\"danger\">{error}</MessageBox>\n          ) : (\n            <Row>\n                {products.map((product) => (\n                    \n                <Col key={product.slug} sm={6} md={4} lg={3} className=\"mb-3\">\n                  <MenuItem product={product}></MenuItem>\n                </Col>\n              ))}\n            </Row>)}\n        </div>\n    )\n}\n\nexport default MenuScreen;"]},"metadata":{},"sourceType":"module"}